apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'


sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven {url "https://maven.aliyun.com/nexus/content/repositories/central"}
//    maven {url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven {url "https://oss.sonatype.org/content/repositories/snapshots" }
}


List logger = [
        'org.slf4j:slf4j-log4j12:1.7.25'
]

def spring_version = "4.3.27.RELEASE"
List spring = [
        "org.springframework:spring-core:$spring_version",
        "org.springframework:spring-beans:$spring_version",
        "org.springframework:spring-context:$spring_version",
        "org.springframework:spring-tx:$spring_version",
        "org.springframework:spring-web:$spring_version",
        "org.springframework:spring-webmvc:$spring_version",
]

// In this section you declare the dependencies for your production and test code
dependencies {
    compile logger
    runtime logger
    // fisco bcos
    compile group: 'org.fisco-bcos.java-sdk', name: 'fisco-bcos-java-sdk', version: '2.9.0'
    // spring
    compile spring
    // servlet
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    providedCompile 'javax.servlet:jsp-api:2.0'
    // https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
}


jar {
    destinationDir file('dist/apps')
    archiveName project.name + '.jar'
    exclude '**/*.xml'
    exclude '**/*.properties'
    exclude '**/*.crt'
    exclude '**/*.key'

    doLast {
        copy {
            from configurations.runtime
            into 'dist/lib'
        }
        copy {
            from file('src/test/resources/')
            into 'dist/conf'
        }
        copy {
            from file('tool/')
            into 'dist/'
        }
        copy {
            from file('src/test/resources/contract')
            into 'dist/contract'
        }
    }
}
